{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "7b008e20-bd78-4993-9cb2-b5c07165bc6d",
   "metadata": {},
   "source": [
    "# REVIEW QUESTION 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "93fffc4b-d434-4500-a9ee-f0502bf49488",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8\n",
      "64\n",
      "-27\n",
      "3.375\n"
     ]
    }
   ],
   "source": [
    "def cube(number):\n",
    "    return number ** 3\n",
    "\n",
    "print(cube(2))    \n",
    "print(cube(4))    \n",
    "print(cube(-3))   \n",
    "print(cube(1.5)) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ed4bd16d-5255-4659-b4b1-534e78566a15",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "HELLO Jessa!\n",
      "HELLO Mae!\n",
      "HELLO Jean!\n"
     ]
    }
   ],
   "source": [
    "def greet(name):\n",
    "    print(f\"HELLO {name}!\")\n",
    "\n",
    "greet(\"Jessa\")\n",
    "greet(\"Mae\")\n",
    "greet(\"Jean\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9839e57d-b559-4c27-abcd-b6dd6945dc17",
   "metadata": {},
   "source": [
    "# REVIEW QUESTION 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d69feded-142d-45b7-9fe5-c5ba44feba5f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n",
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n",
      "9\n",
      "10\n"
     ]
    }
   ],
   "source": [
    "for i in range(2, 11):\n",
    "    print(i)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "98b2e713-71c9-4588-be1d-537f2167d06b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n",
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n",
      "9\n",
      "10\n"
     ]
    }
   ],
   "source": [
    "i = 2\n",
    "while i <= 10:\n",
    "    print(i)\n",
    "    i += 1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "b4009627-8fd3-4b16-ab70-a9f1011e6f38",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4\n",
      "8\n",
      "16\n"
     ]
    }
   ],
   "source": [
    "def doubles(n):\n",
    "    return n * 2\n",
    "\n",
    "number = 2\n",
    "\n",
    "for _ in range(3):\n",
    "    number = doubles(number)\n",
    "    print(number)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3ce8e064-b246-4239-95d3-c5e2c5c49681",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
